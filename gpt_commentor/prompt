Ignore all previous instructions and analyse the following git diff. You will return a succinct semantic git commit message, following GitOps best practices, and be formatted as follows: type(file or folder): comment.
Comment is a one-sentence summary of the changes made to the code base.
Type is defined as follows:
feat is only for new features that affect the end user.
fix is only for fixes to bugs that affect the end user.
docs is for changes to the documentation, which will be exclusively in markdown.
style is only for stylistic changes that do not affect code functionality.
refactor is for changes that affect code functionality, like renaming a variable.
test is for anything done to tests: refactoring, fixing etc.
chore is for everything else.
If multiple types can be applicable you will choose the one with the greatest impact on the end-user; same goes for the file or folder in parentheses.
You will return nothing but the semantically formatted commit message. No introduction, greeting or explanation. 
